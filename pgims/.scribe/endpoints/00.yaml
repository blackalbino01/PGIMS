name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Register new user and issue API token.'
      description: |-
        Registers a new user with the given name, email, and password.
        Returns the created user data and auth token.
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: "User's name."
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: 'Unique user email address.'
        required: true
        example: john@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: 'Password (min 8 chars).'
        required: true
        example: password123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'Password confirmation.'
        required: true
        example: password123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'John Doe'
      email: john@example.com
      password: password123
      password_confirmation: password123
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "user": {
                "id": 1,
                "name": "John Doe",
                "email": "john@example.com",
                "role": "user",
                "created_at": "2025-09-17T14:00:00Z",
                "updated_at": "2025-09-17T14:00:00Z"
            },
            "token": "encrypted_api_token_here"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Login existing user and issue API token.'
      description: |-
        Authenticates user by email and password.
        Returns user data and an authentication token.
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'User email address.'
        required: true
        example: john@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: 'User password.'
        required: true
        example: password123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      email: john@example.com
      password: password123
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "user": {
                "id": 1,
                "name": "John Doe",
                "email": "john@example.com",
                "role": "user",
                "created_at": "2025-09-17T14:00:00Z",
                "updated_at": "2025-09-17T14:00:00Z"
            },
            "token": "encrypted_api_token_here"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Logout authenticated user by revoking current access token.'
      description: 'Requires authentication.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Logged out successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/user
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/users
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of users.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          [
            {
              "id": 1,
              "name": "Jane Doe",
              "email": "jane@example.com",
              "role": "admin",
              "created_at": "2025-09-19T19:29:00Z",
              "updated_at": "2025-09-19T19:29:00Z"
            }
          ]
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/users
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created user.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: "User's full name."
        required: true
        example: 'Jane Doe'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: 'Unique email address.'
        required: true
        example: jane@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: 'Password, minimum 8 characters, must be confirmed.'
        required: true
        example: password123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      role:
        name: role
        description: 'Nullable User role.'
        required: false
        example: admin
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'Password confirmation.'
        required: true
        example: password123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'Jane Doe'
      email: jane@example.com
      password: password123
      role: admin
      password_confirmation: password123
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "id": 1,
            "name": "Jane Doe",
            "email": "jane@example.com",
            "role": "admin",
            "created_at": "2025-09-19T19:29:00Z",
            "updated_at": "2025-09-19T19:29:00Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified user.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user:
        name: user
        description: 'The ID of the user.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 16
      user: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "name": "Jane Doe",
            "email": "jane@example.com",
            "role": "admin",
            "created_at": "2025-09-19T19:29:00Z",
            "updated_at": "2025-09-19T19:29:00Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/users/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified user.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user:
        name: user
        description: 'The ID of the user.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 16
      user: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Nullable Updated user name.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Nullable Updated unique email address.'
        required: false
        example: gbailey@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'Nullable Updated password, minimum 8 characters, must be confirmed.'
        required: false
        example: '|]|{+-'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      role:
        name: role
        description: 'Nullable Updated user role.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'Nullable Password confirmation.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: architecto
      email: gbailey@example.net
      password: '|]|{+-'
      role: architecto
      password_confirmation: architecto
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "name": "Jane Doe Updated",
            "email": "jane.updated@example.com",
            "role": "user",
            "created_at": "2025-09-19T19:29:00Z",
            "updated_at": "2025-09-19T19:45:00Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/users/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified user.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user:
        name: user
        description: 'The ID of the user.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 16
      user: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/suppliers
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of suppliers.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          [
            {
              "id": 1,
              "name": "Supplier A",
              "contact_name": "John Doe",
              "email": "contact@example.com",
              "phone": "123-456-7890",
              "address": "123 Supplier St.",
              "description": "Preferred vendor",
              "created_at": "2025-09-19T18:06:00Z",
              "updated_at": "2025-09-19T18:06:00Z"
            }
          ]
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/suppliers
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created supplier.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Supplier name.'
        required: true
        example: 'Supplier A'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      contact_name:
        name: contact_name
        description: "Nullable Contact person's name."
        required: false
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      email:
        name: email
        description: 'Nullable Unique contact email.'
        required: false
        example: contact@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      phone:
        name: phone
        description: 'Nullable Contact phone number.'
        required: false
        example: 123-456-7890
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      address:
        name: address
        description: 'Nullable Supplier address.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      description:
        name: description
        description: 'Nullable Additional info about the supplier.'
        required: false
        example: 'Eius et animi quos velit et.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: 'Supplier A'
      contact_name: 'John Doe'
      email: contact@example.com
      phone: 123-456-7890
      address: architecto
      description: 'Eius et animi quos velit et.'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "id": 1,
            "name": "Supplier A",
            "contact_name": "John Doe",
            "email": "contact@example.com",
            "phone": "123-456-7890",
            "address": "123 Supplier St.",
            "description": "Preferred vendor",
            "created_at": "2025-09-19T18:06:00Z",
            "updated_at": "2025-09-19T18:06:00Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/suppliers/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified supplier.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the supplier.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      supplier:
        name: supplier
        description: 'The ID of the supplier.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 16
      supplier: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "name": "Supplier A",
            "contact_name": "John Doe",
            "email": "contact@example.com",
            "phone": "123-456-7890",
            "address": "123 Supplier St.",
            "description": "Preferred vendor",
            "created_at": "2025-09-19T18:06:00Z",
            "updated_at": "2025-09-19T18:06:00Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/suppliers/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified supplier.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the supplier.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      supplier:
        name: supplier
        description: 'The ID of the supplier.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 16
      supplier: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Nullable Updated supplier name.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      contact_name:
        name: contact_name
        description: 'Nullable Updated contact name.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      email:
        name: email
        description: 'Nullable Updated email.'
        required: false
        example: gbailey@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      phone:
        name: phone
        description: 'Nullable Updated phone.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      address:
        name: address
        description: 'Nullable Updated address.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      description:
        name: description
        description: 'Nullable Updated description.'
        required: false
        example: 'Eius et animi quos velit et.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: architecto
      contact_name: architecto
      email: gbailey@example.net
      phone: architecto
      address: architecto
      description: 'Eius et animi quos velit et.'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "name": "Supplier A Updated",
            "contact_name": "Jane Smith",
            "email": "contactnew@example.com",
            "phone": "987-654-3210",
            "address": "456 New Supplier St.",
            "description": "Updated vendor info",
            "created_at": "2025-09-19T18:06:00Z",
            "updated_at": "2025-09-19T18:45:00Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/suppliers/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified supplier.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the supplier.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      supplier:
        name: supplier
        description: 'The ID of the supplier.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 16
      supplier: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/products
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of products.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          [
            {
              "id": 1,
              "sku": "SKU001",
              "name": "Product A",
              "description": "A sample product.",
              "price": 100.00,
              "stock": 50,
              "created_at": "2025-09-19T09:35:00Z",
              "updated_at": "2025-09-19T09:35:00Z"
            }
          ]
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/products
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a new product.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      sku:
        name: sku
        description: 'Nullable product SKU.'
        required: false
        example: SKU001
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      name:
        name: name
        description: 'Product name.'
        required: true
        example: 'Product A'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'Nullable product description.'
        required: false
        example: 'Eius et animi quos velit et.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      price:
        name: price
        description: 'Product price (min 0).'
        required: true
        example: '100.00'
        type: numeric
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      stock:
        name: stock
        description: 'Stock quantity (min 0).'
        required: true
        example: 50
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      sku: SKU001
      name: 'Product A'
      description: 'Eius et animi quos velit et.'
      price: '100.00'
      stock: 50
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "id": 1,
            "sku": "SKU001",
            "name": "Product A",
            "description": "A sample product.",
            "price": 100.00,
            "stock": 50,
            "created_at": "2025-09-19T09:35:00Z",
            "updated_at": "2025-09-19T09:35:00Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/products/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update an existing product.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      sku:
        name: sku
        description: 'Nullable product SKU.'
        required: false
        example: SKU001
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      name:
        name: name
        description: 'Nullable product name.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'Nullable product description.'
        required: false
        example: 'Eius et animi quos velit et.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      price:
        name: price
        description: 'Nullable product price (min 0).'
        required: false
        example: architecto
        type: numeric
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      stock:
        name: stock
        description: 'Nullable stock quantity (min 0).'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      sku: SKU001
      name: architecto
      description: 'Eius et animi quos velit et.'
      price: architecto
      stock: 16
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "sku": "SKU001",
            "name": "Product A Updated",
            "description": "Updated description.",
            "price": 120.00,
            "stock": 30,
            "created_at": "2025-09-19T09:35:00Z",
            "updated_at": "2025-09-19T09:50:00Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/products/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified product.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      product:
        name: product
        description: 'The ID of the product.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 16
      product: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/inventory
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of inventory items with related store and product.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          [
            {
              "id": 1,
              "store_id": 2,
              "product_id": 5,
              "quantity": 100,
              "created_at": "2025-09-19T09:00:00Z",
              "updated_at": "2025-09-19T09:00:00Z",
              "store": {
                "id": 2,
                "name": "Main Store",
                // other store fields
              },
              "product": {
                "id": 5,
                "name": "Product A",
                // other product fields
              }
            }
          ]
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/inventory
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created inventory record.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      store_id:
        name: store_id
        description: 'Store ID reference.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      product_id:
        name: product_id
        description: 'Product ID reference.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      quantity:
        name: quantity
        description: 'Quantity in stock (min 0).'
        required: true
        example: 100
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      store_id: 2
      product_id: 5
      quantity: 100
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "id": 1,
            "store_id": 2,
            "product_id": 5,
            "quantity": 100,
            "created_at": "2025-09-19T09:00:00Z",
            "updated_at": "2025-09-19T09:00:00Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/inventory/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified inventory record with related store and product.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the inventory.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      inventory:
        name: inventory
        description: 'Inventory record ID.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 16
      inventory: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "store_id": 2,
            "product_id": 5,
            "quantity": 100,
            "created_at": "2025-09-19T09:00:00Z",
            "updated_at": "2025-09-19T09:00:00Z",
            "store": {
              "id": 2,
              "name": "Main Store"
            },
            "product": {
              "id": 5,
              "name": "Product A"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/inventory/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified inventory record.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the inventory.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      inventory:
        name: inventory
        description: 'Inventory record ID.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 16
      inventory: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      store_id:
        name: store_id
        description: 'Nullable Store ID.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      product_id:
        name: product_id
        description: 'Nullable Product ID.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      quantity:
        name: quantity
        description: 'Nullable Quantity in stock (min 0).'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      store_id: 16
      product_id: 16
      quantity: 16
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "store_id": 2,
            "product_id": 5,
            "quantity": 150,
            "created_at": "2025-09-19T09:00:00Z",
            "updated_at": "2025-09-19T10:00:00Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/inventory/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified inventory record.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the inventory.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      inventory:
        name: inventory
        description: 'Inventory record ID.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 16
      inventory: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/orders
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of orders with related items and customer.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          [
            {
              "id": 1,
              "customer_id": 1,
              "total_amount": 250.00,
              "status": "completed",
              "created_at": "2025-09-19T09:00:00Z",
              "updated_at": "2025-09-19T09:00:00Z",
              "items": [
                {
                  "product_id": 5,
                  "quantity": 2,
                  "unit_price": 50.00,
                  "line_total": 100.00,
                  "product": {
                    "id": 5,
                    "name": "Product A"
                  }
                }
              ],
              "customer": {
                "id": 1,
                "name": "Jane Doe"
              }
            }
          ]
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/orders
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a new order including order items and stock adjustments.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      customer_id:
        name: customer_id
        description: 'Nullable ID of the customer placing the order.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      items:
        name: items
        description: 'Array of order items.'
        required: true
        example:
          - architecto
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'items[].product_id':
        name: 'items[].product_id'
        description: 'The <code>id</code> of an existing record in the products table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'items[].quantity':
        name: 'items[].quantity'
        description: 'Must be at least 1.'
        required: true
        example: 22
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'items.*.product_id':
        name: 'items.*.product_id'
        description: 'Product ID.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'items.*.quantity':
        name: 'items.*.quantity'
        description: 'Quantity ordered. Minimum 1.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      customer_id: 1
      items:
        - architecto
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "id": 1,
            "customer_id": 1,
            "total_amount": 250.00,
            "status": "completed",
            "created_at": "2025-09-19T09:00:00Z",
            "updated_at": "2025-09-19T09:00:00Z",
            "items": [...],
            "customer": {...}
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/orders/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified order with items and customer.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the order.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      order:
        name: order
        description: 'The ID of the order.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 16
      order: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "customer_id": 1,
            "total_amount": 250.00,
            "status": "completed",
            "created_at": "2025-09-19T09:00:00Z",
            "updated_at": "2025-09-19T09:00:00Z",
            "items": [
              {
                "product_id": 5,
                "quantity": 2,
                "unit_price": 50.00,
                "line_total": 100.00,
                "product": {
                  "id": 5,
                  "name": "Product A"
                }
              }
            ],
            "customer": {
              "id": 1,
              "name": "Jane Doe"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/orders/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified order and manage items and stock.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the order.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      order:
        name: order
        description: 'The ID of the order.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 16
      order: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      customer_id:
        name: customer_id
        description: 'Nullable Updated customer ID.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: 'Nullable Updated order status. One of: pending, processing, completed, cancelled.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      notes:
        name: notes
        description: 'Nullable Additional notes.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      items:
        name: items
        description: 'Nullable Updated list of order items.'
        required: false
        example:
          - architecto
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'items[].product_id':
        name: 'items[].product_id'
        description: 'This field is required when <code>items</code> is present. The <code>id</code> of an existing record in the products table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'items[].quantity':
        name: 'items[].quantity'
        description: 'This field is required when <code>items</code> is present. Must be at least 1.'
        required: false
        example: 22
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'items.*.product_id':
        name: 'items.*.product_id'
        description: 'required_with:items Product ID.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'items.*.quantity':
        name: 'items.*.quantity'
        description: 'required_with:items Quantity ordered.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      customer_id: 16
      status: architecto
      notes: architecto
      items:
        - architecto
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "customer_id": 1,
            "total_amount": 300.00,
            "status": "completed",
            "notes": "Updated notes",
            "created_at": "2025-09-19T09:00:00Z",
            "updated_at": "2025-09-19T10:00:00Z",
            "items": [...],
            "customer": {...}
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/orders/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified order and restore stock quantities.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the order.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      order:
        name: order
        description: 'The ID of the order.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 16
      order: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/order-items
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of order items with related products and orders.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          [
            {
              "id": 1,
              "order_id": 10,
              "product_id": 5,
              "quantity": 3,
              "unit_price": 50.00,
              "line_total": 150.00,
              "created_at": "2025-09-19T09:30:00Z",
              "updated_at": "2025-09-19T09:30:00Z",
              "product": {
                "id": 5,
                "name": "Product A"
              },
              "order": {
                "id": 10,
                "customer_id": 1,
                "total_amount": 500.00,
                "status": "completed"
              }
            }
          ]
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/order-items
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a new order item.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      order_id:
        name: order_id
        description: 'ID of the order.'
        required: true
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      product_id:
        name: product_id
        description: 'ID of the product.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      quantity:
        name: quantity
        description: 'Quantity ordered. Minimum 1.'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      unit_price:
        name: unit_price
        description: 'Unit price of the product.'
        required: true
        example: '50.00'
        type: numeric
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      line_total:
        name: line_total
        description: 'Total line amount.'
        required: true
        example: '150.00'
        type: numeric
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      order_id: 10
      product_id: 5
      quantity: 3
      unit_price: '50.00'
      line_total: '150.00'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "id": 1,
            "order_id": 10,
            "product_id": 5,
            "quantity": 3,
            "unit_price": 50.00,
            "line_total": 150.00,
            "created_at": "2025-09-19T09:30:00Z",
            "updated_at": "2025-09-19T09:30:00Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/order-items/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified order item with product and order.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the order item.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      orderItem:
        name: orderItem
        description: 'The ID of the order item.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 16
      orderItem: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "order_id": 10,
            "product_id": 5,
            "quantity": 3,
            "unit_price": 50.00,
            "line_total": 150.00,
            "created_at": "2025-09-19T09:30:00Z",
            "updated_at": "2025-09-19T09:30:00Z",
            "product": {
              "id": 5,
              "name": "Product A"
            },
            "order": {
              "id": 10,
              "customer_id": 1,
              "total_amount": 500.00,
              "status": "completed"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/order-items/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update an existing order item.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the order item.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      orderItem:
        name: orderItem
        description: 'The ID of the order item.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 16
      orderItem: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      order_id:
        name: order_id
        description: 'Nullable Updated order ID.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      product_id:
        name: product_id
        description: 'Nullable Updated product ID.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      quantity:
        name: quantity
        description: 'Nullable Updated quantity.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      unit_price:
        name: unit_price
        description: 'Nullable Updated unit price.'
        required: false
        example: architecto
        type: numeric
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      line_total:
        name: line_total
        description: 'Nullable Updated line total.'
        required: false
        example: architecto
        type: numeric
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      order_id: 16
      product_id: 16
      quantity: 16
      unit_price: architecto
      line_total: architecto
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "order_id": 10,
            "product_id": 5,
            "quantity": 4,
            "unit_price": 45.00,
            "line_total": 180.00,
            "created_at": "2025-09-19T09:30:00Z",
            "updated_at": "2025-09-19T10:00:00Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/order-items/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete the specified order item.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the order item.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      orderItem:
        name: orderItem
        description: 'The ID of the order item.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 16
      orderItem: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/purchase-orders
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of purchase orders with associated supplier.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          [
            {
              "id": 1,
              "supplier_id": 3,
              "order_number": "PO-12345",
              "status": "pending",
              "total_amount": 1000.00,
              "order_date": "2025-09-20",
              "expected_date": "2025-09-30",
              "notes": "Urgent order",
              "created_at": "2025-09-19T16:40:00Z",
              "updated_at": "2025-09-19T16:40:00Z",
              "supplier": {
                "id": 3,
                "name": "Supplier Name"
              }
            }
          ]
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/purchase-orders
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created purchase order.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      supplier_id:
        name: supplier_id
        description: 'Supplier ID.'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      order_number:
        name: order_number
        description: 'Unique order number.'
        required: true
        example: PO-12345
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      status:
        name: status
        description: 'Nullable Order status. One of: pending, approved, received, cancelled.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      total_amount:
        name: total_amount
        description: 'Nullable Total amount.'
        required: false
        example: '1000.00'
        type: numeric
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      order_date:
        name: order_date
        description: 'Nullable Order date.'
        required: false
        example: '2025-09-20'
        type: date
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      expected_date:
        name: expected_date
        description: 'Nullable Expected delivery date.'
        required: false
        example: '2025-09-30'
        type: date
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      notes:
        name: notes
        description: 'Nullable Additional notes.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      supplier_id: 3
      order_number: PO-12345
      status: architecto
      total_amount: '1000.00'
      order_date: '2025-09-20'
      expected_date: '2025-09-30'
      notes: architecto
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "id": 1,
            "supplier_id": 3,
            "order_number": "PO-12345",
            "status": "pending",
            "total_amount": 1000.00,
            "order_date": "2025-09-20",
            "expected_date": "2025-09-30",
            "notes": "Urgent order",
            "created_at": "2025-09-19T16:40:00Z",
            "updated_at": "2025-09-19T16:40:00Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/purchase-orders/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified purchase order with supplier details.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the purchase order.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      purchaseOrder:
        name: purchaseOrder
        description: 'The ID of the purchase order.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 16
      purchaseOrder: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "supplier_id": 3,
            "order_number": "PO-12345",
            "status": "pending",
            "total_amount": 1000.00,
            "order_date": "2025-09-20",
            "expected_date": "2025-09-30",
            "notes": "Urgent order",
            "created_at": "2025-09-19T16:40:00Z",
            "updated_at": "2025-09-19T16:40:00Z",
            "supplier": {
              "id": 3,
              "name": "Supplier Name"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/purchase-orders/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified purchase order.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the purchase order.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      purchaseOrder:
        name: purchaseOrder
        description: 'The ID of the purchase order.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 16
      purchaseOrder: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      supplier_id:
        name: supplier_id
        description: 'Nullable Supplier ID.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      order_number:
        name: order_number
        description: 'Nullable Unique order number.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: 'Nullable Order status.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      total_amount:
        name: total_amount
        description: 'Nullable Total amount.'
        required: false
        example: architecto
        type: numeric
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      order_date:
        name: order_date
        description: 'Nullable Order date.'
        required: false
        example: architecto
        type: date
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      expected_date:
        name: expected_date
        description: 'Nullable Expected delivery date.'
        required: false
        example: architecto
        type: date
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      notes:
        name: notes
        description: 'Nullable Additional notes.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      supplier_id: 16
      order_number: architecto
      status: architecto
      total_amount: architecto
      order_date: architecto
      expected_date: architecto
      notes: architecto
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "supplier_id": 3,
            "order_number": "PO-12346",
            "status": "approved",
            "total_amount": 1100.00,
            "order_date": "2025-09-20",
            "expected_date": "2025-10-01",
            "notes": "Approved order",
            "created_at": "2025-09-19T16:40:00Z",
            "updated_at": "2025-09-19T17:00:00Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/purchase-orders/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified purchase order.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the purchase order.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      purchaseOrder:
        name: purchaseOrder
        description: 'The ID of the purchase order.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 16
      purchaseOrder: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/stock-requisitions
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of stock requisitions with related stores, approver, and items.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          [
            {
              "id": 1,
              "from_store_id": 2,
              "to_store_id": 3,
              "status": "pending",
              "approved_by": 5,
              "created_at": "2025-09-19T16:44:00Z",
              "updated_at": "2025-09-19T16:44:00Z",
              "fromStore": { "id": 2, "name": "Store A" },
              "toStore": { "id": 3, "name": "Store B" },
              "approvedBy": { "id": 5, "name": "Manager" },
              "items": [
                / Array of requisition items /
              ]
            }
          ]
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/stock-requisitions
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created stock requisition.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      from_store_id:
        name: from_store_id
        description: 'ID of the source store.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      to_store_id:
        name: to_store_id
        description: 'ID of the destination store (different from from_store_id).'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: 'Status of the requisition.'
        required: true
        example: pending
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      approved_by:
        name: approved_by
        description: 'Nullable User ID who approved the requisition.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      from_store_id: 16
      to_store_id: 16
      status: pending
      approved_by: 16
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "id": 1,
            "from_store_id": 2,
            "to_store_id": 3,
            "status": "pending",
            "approved_by": 5,
            "created_at": "2025-09-19T16:44:00Z",
            "updated_at": "2025-09-19T16:44:00Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/stock-requisitions/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a specific stock requisition with details.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the stock requisition.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      stockRequisition:
        name: stockRequisition
        description: 'The ID of the stock requisition.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 16
      stockRequisition: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "from_store_id": 2,
            "to_store_id": 3,
            "status": "pending",
            "approved_by": 5,
            "created_at": "2025-09-19T16:44:00Z",
            "updated_at": "2025-09-19T16:44:00Z",
            "fromStore": { "id": 2, "name": "Store A" },
            "toStore": { "id": 3, "name": "Store B" },
            "approvedBy": { "id": 5, "name": "Manager" },
            "items": [
              / Array of requisition items /
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/stock-requisitions/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified stock requisition.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the stock requisition.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      stockRequisition:
        name: stockRequisition
        description: 'The ID of the stock requisition.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 16
      stockRequisition: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      from_store_id:
        name: from_store_id
        description: 'Nullable ID of the source store.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      to_store_id:
        name: to_store_id
        description: 'Nullable ID of the destination store (must be different from from_store_id).'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: 'Nullable Status of the requisition.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      approved_by:
        name: approved_by
        description: 'Nullable User ID who approved the requisition.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      from_store_id: 16
      to_store_id: 16
      status: architecto
      approved_by: 16
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "from_store_id": 2,
            "to_store_id": 3,
            "status": "approved",
            "approved_by": 5,
            "created_at": "2025-09-19T16:44:00Z",
            "updated_at": "2025-09-19T17:00:00Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/stock-requisitions/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified stock requisition.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the stock requisition.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      stockRequisition:
        name: stockRequisition
        description: 'The ID of the stock requisition.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 16
      stockRequisition: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/stock-requisition-items
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of stock requisition items with related stock requisition and product.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          [
            {
              "id": 1,
              "stock_requisition_id": 2,
              "product_id": 5,
              "quantity": 10,
              "created_at": "2025-09-19T17:00:00Z",
              "updated_at": "2025-09-19T17:00:00Z",
              "stockRequisition": {
                "id": 2,
                "status": "pending",
                // other stock requisition fields
              },
              "product": {
                "id": 5,
                "name": "Product A"
              }
            }
          ]
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/stock-requisition-items
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created stock requisition item.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      stock_requisition_id:
        name: stock_requisition_id
        description: 'ID of the stock requisition.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      product_id:
        name: product_id
        description: 'ID of the product.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      quantity:
        name: quantity
        description: 'Quantity requested. Minimum 1.'
        required: true
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      stock_requisition_id: 2
      product_id: 5
      quantity: 10
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "id": 1,
            "stock_requisition_id": 2,
            "product_id": 5,
            "quantity": 10,
            "created_at": "2025-09-19T17:00:00Z",
            "updated_at": "2025-09-19T17:00:00Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/stock-requisition-items/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified stock requisition item with related data.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the stock requisition item.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      stockRequisitionItem:
        name: stockRequisitionItem
        description: 'The ID of the stock requisition item.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 16
      stockRequisitionItem: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "stock_requisition_id": 2,
            "product_id": 5,
            "quantity": 10,
            "created_at": "2025-09-19T17:00:00Z",
            "updated_at": "2025-09-19T17:00:00Z",
            "stockRequisition": {
              "id": 2,
              "status": "pending"
            },
            "product": {
              "id": 5,
              "name": "Product A"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/stock-requisition-items/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified stock requisition item.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the stock requisition item.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      stockRequisitionItem:
        name: stockRequisitionItem
        description: 'The ID of the stock requisition item.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 16
      stockRequisitionItem: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      stock_requisition_id:
        name: stock_requisition_id
        description: 'Nullable ID of the stock requisition.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      product_id:
        name: product_id
        description: 'Nullable ID of the product.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      quantity:
        name: quantity
        description: 'Nullable Updated quantity.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      stock_requisition_id: 16
      product_id: 16
      quantity: 16
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "stock_requisition_id": 2,
            "product_id": 5,
            "quantity": 15,
            "created_at": "2025-09-19T17:00:00Z",
            "updated_at": "2025-09-19T18:00:00Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/stock-requisition-items/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified stock requisition item.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the stock requisition item.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      stockRequisitionItem:
        name: stockRequisitionItem
        description: 'The ID of the stock requisition item.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 16
      stockRequisitionItem: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/stores
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of stores.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          [
            {
              "id": 1,
              "name": "Main Store",
              "address": "123 Main Street",
              "phone": "123-456-7890",
              "created_at": "2025-09-19T17:03:00Z",
              "updated_at": "2025-09-19T17:03:00Z"
            }
          ]
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/stores
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created store.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of the store.'
        required: true
        example: 'Main Store'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      address:
        name: address
        description: 'Nullable Store address.'
        required: false
        example: '123 Main Street'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      phone:
        name: phone
        description: 'Nullable Store phone number.'
        required: false
        example: 123-456-7890
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      name: 'Main Store'
      address: '123 Main Street'
      phone: 123-456-7890
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "id": 1,
            "name": "Main Store",
            "address": "123 Main Street",
            "phone": "123-456-7890",
            "created_at": "2025-09-19T17:03:00Z",
            "updated_at": "2025-09-19T17:03:00Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/stores/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified store.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the store.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      store:
        name: store
        description: 'The ID of the store.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 16
      store: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "name": "Main Store",
            "address": "123 Main Street",
            "phone": "123-456-7890",
            "created_at": "2025-09-19T17:03:00Z",
            "updated_at": "2025-09-19T17:03:00Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/stores/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified store.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the store.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      store:
        name: store
        description: 'The ID of the store.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 16
      store: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Nullable Updated name.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      address:
        name: address
        description: 'Nullable Updated address.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      phone:
        name: phone
        description: 'Nullable Updated phone.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: architecto
      address: architecto
      phone: architecto
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "name": "Updated Store",
            "address": "456 New Street",
            "phone": "987-654-3210",
            "created_at": "2025-09-19T17:03:00Z",
            "updated_at": "2025-09-19T17:15:00Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/stores/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified store.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the store.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      store:
        name: store
        description: 'The ID of the store.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 16
      store: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/reports/daily-sales
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get daily sales summary report.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      date:
        name: date
        description: 'Date to get sales for (Y-m-d format). Defaults to today.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      store_id:
        name: store_id
        description: 'Optional array of store IDs to filter by.'
        required: false
        example:
          - 16
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      date: architecto
      store_id:
        - 16
    bodyParameters:
      date:
        name: date
        description: 'Must be a valid date.'
        required: false
        example: '2025-09-23T18:01:28'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      store_id:
        name: store_id
        description: 'The <code>id</code> of an existing record in the stores table.'
        required: false
        example:
          - 16
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      date: '2025-09-23T18:01:28'
      store_id:
        - 16
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "date": "2025-09-17",
            "total_orders": 100,
            "total_sales": 50000.45
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/reports/payment-breakdown
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get payment breakdown by payment method over a date range.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      start:
        name: start
        description: 'Start date (Y-m-d). Defaults to one month ago.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      end:
        name: end
        description: 'End date (Y-m-d). Defaults to today.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      store_id:
        name: store_id
        description: 'Optional array of store IDs to filter by.'
        required: false
        example:
          - 16
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      start: architecto
      end: architecto
      store_id:
        - 16
    bodyParameters:
      start:
        name: start
        description: 'Must be a valid date.'
        required: false
        example: '2025-09-23T18:01:28'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      end:
        name: end
        description: 'Must be a valid date. Must be a date after or equal to <code>start</code>.'
        required: false
        example: '2051-10-17'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      store_id:
        name: store_id
        description: 'The <code>id</code> of an existing record in the stores table.'
        required: false
        example:
          - 16
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      start: '2025-09-23T18:01:28'
      end: '2051-10-17'
      store_id:
        - 16
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "start_date": "2025-08-17",
            "end_date": "2025-09-17",
            "payment_methods": [
              { "payment_method": "cash", "total": 20000 },
              { "payment_method": "card", "total": 30000 }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/reports/profit
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Generate profit report for a date range.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      start:
        name: start
        description: 'Start date (Y-m-d). Defaults to one month ago.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      end:
        name: end
        description: 'End date (Y-m-d). Defaults to today.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      store_id:
        name: store_id
        description: 'Optional array of store IDs to filter by.'
        required: false
        example:
          - 16
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      start: architecto
      end: architecto
      store_id:
        - 16
    bodyParameters:
      start:
        name: start
        description: 'Must be a valid date.'
        required: false
        example: '2025-09-23T18:01:28'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      end:
        name: end
        description: 'Must be a valid date. Must be a date after or equal to <code>start</code>.'
        required: false
        example: '2051-10-17'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      store_id:
        name: store_id
        description: 'The <code>id</code> of an existing record in the stores table.'
        required: false
        example:
          - 16
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      start: '2025-09-23T18:01:28'
      end: '2051-10-17'
      store_id:
        - 16
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "start_date": "2025-08-17",
           "end_date": "2025-09-17",
           "profit": 15000.50
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/reports/inventory-status
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get inventory stock status by product and store.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      store_id:
        name: store_id
        description: 'Optional store ID to filter by.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      store_id: 16
    bodyParameters:
      store_id:
        name: store_id
        description: 'The <code>id</code> of an existing record in the stores table.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      store_id: 16
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          [
            { "id": 1, "name": "Product A", "quantity": 100, "store_id": 2 },
            { "id": 2, "name": "Product B", "quantity": 50, "store_id": 2 }
          ]
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/reports/customer-credit
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get customer credit and balance report.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      customer_id:
        name: customer_id
        description: 'Optional customer ID to filter by.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      customer_id: 16
    bodyParameters:
      customer_id:
        name: customer_id
        description: 'The <code>id</code> of an existing record in the customers table.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      customer_id: 16
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          [
            { "id": 1, "name": "John Doe", "balance": 1200, "credit_limit": 5000 }
          ]
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/reports/expense
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Generate expense report for a date range.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      start:
        name: start
        description: 'Start date (Y-m-d). Defaults to one month ago.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      end:
        name: end
        description: 'End date (Y-m-d). Defaults to today.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      store_id:
        name: store_id
        description: 'Optional array of store IDs to filter by.'
        required: false
        example:
          - 16
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      start: architecto
      end: architecto
      store_id:
        - 16
    bodyParameters:
      start:
        name: start
        description: 'Must be a valid date.'
        required: false
        example: '2025-09-23T18:01:28'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      end:
        name: end
        description: 'Must be a valid date. Must be a date after or equal to <code>start</code>.'
        required: false
        example: '2051-10-17'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      store_id:
        name: store_id
        description: 'The <code>id</code> of an existing record in the stores table.'
        required: false
        example:
          - 16
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      start: '2025-09-23T18:01:28'
      end: '2051-10-17'
      store_id:
        - 16
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "start_date": "2025-08-17",
           "end_date": "2025-09-17",
           "total_expenses": 8000
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/customers
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of customers.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          [
            {
              "id": 1,
              "name": "Jane Doe",
              "gender": "female",
              "phone": "1234567890",
              "email": "jane@example.com",
              "address": "123 Main St",
              "birthday": "1990-05-10",
              "balance": 2000.00,
              "credit_limit": 5000.00,
              "notes": "Loyal customer",
              "created_at": "2025-09-17T12:00:00Z",
              "updated_at": "2025-09-17T12:00:00Z"
            }
          ]
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/customers
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a new customer.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: "Customer's name."
        required: true
        example: 'Jane Doe'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      gender:
        name: gender
        description: 'Nullable gender.'
        required: false
        example: female
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      phone:
        name: phone
        description: 'Nullable phone number.'
        required: false
        example: '1234567890'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      email:
        name: email
        description: 'Nullable unique email.'
        required: false
        example: jane@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      address:
        name: address
        description: 'Nullable address.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      birthday:
        name: birthday
        description: 'Nullable date of birth.'
        required: false
        example: '1990-05-10'
        type: date
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      balance:
        name: balance
        description: 'Nullable initial balance.'
        required: false
        example: '2000.00'
        type: numeric
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      credit_limit:
        name: credit_limit
        description: 'Nullable credit limit.'
        required: false
        example: '5000.00'
        type: numeric
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      notes:
        name: notes
        description: 'Nullable additional notes.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: 'Jane Doe'
      gender: female
      phone: '1234567890'
      email: jane@example.com
      address: architecto
      birthday: '1990-05-10'
      balance: '2000.00'
      credit_limit: '5000.00'
      notes: architecto
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "id": 1,
            "name": "Jane Doe",
            "gender": "female",
            "phone": "1234567890",
            "email": "jane@example.com",
            "address": "123 Main St",
            "birthday": "1990-05-10",
            "balance": 2000.00,
            "credit_limit": 5000.00,
            "notes": "Loyal customer",
            "created_at": "2025-09-17T12:00:00Z",
            "updated_at": "2025-09-17T12:00:00Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/customers/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified customer.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the customer.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      customer:
        name: customer
        description: 'The ID of the customer.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 16
      customer: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "name": "Jane Doe",
            "gender": "female",
            "phone": "1234567890",
            "email": "jane@example.com",
            "address": "123 Main St",
            "birthday": "1990-05-10",
            "balance": 2000.00,
            "credit_limit": 5000.00,
            "notes": "Loyal customer",
            "created_at": "2025-09-17T12:00:00Z",
            "updated_at": "2025-09-17T12:00:00Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/customers/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified customer.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the customer.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      customer:
        name: customer
        description: 'The ID of the customer.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 16
      customer: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Nullable updated name.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      gender:
        name: gender
        description: 'Nullable updated gender.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      phone:
        name: phone
        description: 'Nullable updated phone.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      email:
        name: email
        description: 'Nullable updated email.'
        required: false
        example: gbailey@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      address:
        name: address
        description: 'Nullable updated address.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      birthday:
        name: birthday
        description: 'Nullable updated birthday.'
        required: false
        example: architecto
        type: date
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      balance:
        name: balance
        description: 'Nullable updated balance.'
        required: false
        example: architecto
        type: numeric
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      credit_limit:
        name: credit_limit
        description: 'Nullable updated credit limit.'
        required: false
        example: architecto
        type: numeric
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      notes:
        name: notes
        description: 'Nullable updated notes.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: architecto
      gender: architecto
      phone: architecto
      email: gbailey@example.net
      address: architecto
      birthday: architecto
      balance: architecto
      credit_limit: architecto
      notes: architecto
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "name": "Jane Doe Updated",
            "gender": "female",
            "phone": "0987654321",
            "email": "janeupdated@example.com",
            "address": "456 Another St",
            "birthday": "1990-05-10",
            "balance": 2500.00,
            "credit_limit": 5500.00,
            "notes": "Updated notes",
            "created_at": "2025-09-17T12:00:00Z",
            "updated_at": "2025-09-18T15:00:00Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/customers/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified customer.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the customer.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      customer:
        name: customer
        description: 'The ID of the customer.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 16
      customer: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/transactions
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of transactions with related bank accounts.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          [
            {
              "id": 1,
              "bank_account_id": 2,
              "type": "credit",
              "amount": 1000.00,
              "reference": "INV-12345",
              "description": "Payment received",
              "transaction_date": "2025-09-19",
              "created_at": "2025-09-19T19:00:00Z",
              "updated_at": "2025-09-19T19:00:00Z",
              "bankAccount": {
                "id": 2,
                "bank_name": "First Bank",
                "account_number": "1234567890"
              }
            }
          ]
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/transactions
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a new transaction inside a database transaction block.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      bank_account_id:
        name: bank_account_id
        description: 'Related bank account ID.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      type:
        name: type
        description: 'Transaction type: credit or debit.'
        required: true
        example: credit
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      amount:
        name: amount
        description: 'Transaction amount. Minimum 0.'
        required: true
        example: '1000.00'
        type: numeric
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      reference:
        name: reference
        description: 'Nullable Transaction reference or invoice ID.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      description:
        name: description
        description: 'Nullable Additional details about the transaction.'
        required: false
        example: 'Eius et animi quos velit et.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      transaction_date:
        name: transaction_date
        description: 'Nullable Date of the transaction.'
        required: false
        example: architecto
        type: date
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      bank_account_id: 2
      type: credit
      amount: '1000.00'
      reference: architecto
      description: 'Eius et animi quos velit et.'
      transaction_date: architecto
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "id": 10,
            "bank_account_id": 2,
            "type": "credit",
            "amount": 1000.00,
            "reference": "INV-12345",
            "description": "Payment received",
            "transaction_date": "2025-09-19",
            "created_at": "2025-09-19T19:05:00Z",
            "updated_at": "2025-09-19T19:05:00Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/transactions/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified transaction with bank account details.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the transaction.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      transaction:
        name: transaction
        description: 'The ID of the transaction.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 16
      transaction: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "bank_account_id": 2,
            "type": "credit",
            "amount": 1000.00,
            "reference": "INV-12345",
            "description": "Payment received",
            "transaction_date": "2025-09-19",
            "created_at": "2025-09-19T19:00:00Z",
            "updated_at": "2025-09-19T19:00:00Z",
            "bankAccount": {
              "id": 2,
              "bank_name": "First Bank",
              "account_number": "1234567890"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/transactions/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified transaction inside a database transaction.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the transaction.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      transaction:
        name: transaction
        description: 'The ID of the transaction.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 16
      transaction: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      bank_account_id:
        name: bank_account_id
        description: 'Nullable Updated bank account ID.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      type:
        name: type
        description: 'Nullable Updated transaction type.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      amount:
        name: amount
        description: 'Nullable Updated amount. Minimum 0.'
        required: false
        example: architecto
        type: numeric
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      reference:
        name: reference
        description: 'Nullable Updated reference.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      description:
        name: description
        description: 'Nullable Updated description.'
        required: false
        example: 'Eius et animi quos velit et.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      transaction_date:
        name: transaction_date
        description: 'Nullable Updated transaction date.'
        required: false
        example: architecto
        type: date
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      bank_account_id: 16
      type: architecto
      amount: architecto
      reference: architecto
      description: 'Eius et animi quos velit et.'
      transaction_date: architecto
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 10,
            "bank_account_id": 2,
            "type": "debit",
            "amount": 500.00,
            "reference": "PAY-56789",
            "description": "Payment refund",
            "transaction_date": "2025-09-20",
            "created_at": "2025-09-19T19:05:00Z",
            "updated_at": "2025-09-20T10:00:00Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/transactions/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete the specified transaction.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the transaction.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      transaction:
        name: transaction
        description: 'The ID of the transaction.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 16
      transaction: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/notifications
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of notifications for a given notifiable entity.'
      description: |-
        Accepts optional query parameters:
        - notifiable_type: The class/type of the notifiable entity.
        - notifiable_id: The ID of the notifiable entity.
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      notifiable_type:
        name: notifiable_type
        description: 'Optional class name of the notifiable entity.'
        required: false
        example: App\Models\User
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      notifiable_id:
        name: notifiable_id
        description: 'Optional ID of the notifiable entity.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      notifiable_type: App\Models\User
      notifiable_id: 1
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          [
            {
              "id": 5,
              "type": "info",
              "title": "New Update Available",
              "message": "Version 2.0 is now live!",
              "is_read": false,
              "notifiable_type": "App\Models\User",
              "notifiable_id": 1,
              "created_at": "2025-09-19T09:18:00Z",
              "updated_at": "2025-09-19T09:18:00Z"
            }
          ]
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/notifications
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a new notification.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      type:
        name: type
        description: 'The notification type/category.'
        required: true
        example: info
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      title:
        name: title
        description: 'Notification title.'
        required: true
        example: 'New Update Available'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      message:
        name: message
        description: 'Notification message content.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_read:
        name: is_read
        description: 'Whether the notification has been read. Defaults to false.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      notifiable_type:
        name: notifiable_type
        description: 'The class/type of the notifiable entity.'
        required: true
        example: App\Models\User
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      notifiable_id:
        name: notifiable_id
        description: 'The ID of the notifiable entity.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      type: info
      title: 'New Update Available'
      message: architecto
      is_read: false
      notifiable_type: App\Models\User
      notifiable_id: 1
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "id": 5,
            "type": "info",
            "title": "New Update Available",
            "message": "Version 2.0 is now live!",
            "is_read": false,
            "notifiable_type": "App\Models\User",
            "notifiable_id": 1,
            "created_at": "2025-09-19T09:18:00Z",
            "updated_at": "2025-09-19T09:18:00Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/notifications/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a specific notification.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the notification.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      notification:
        name: notification
        description: 'The ID of the notification.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 16
      notification: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 5,
            "type": "info",
            "title": "New Update Available",
            "message": "Version 2.0 is now live!",
            "is_read": false,
            "notifiable_type": "App\Models\User",
            "notifiable_id": 1,
            "created_at": "2025-09-19T09:18:00Z",
            "updated_at": "2025-09-19T09:18:00Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/notifications/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a notification.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the notification.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      notification:
        name: notification
        description: 'The ID of the notification.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 16
      notification: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      type:
        name: type
        description: 'Nullable Notification type/category.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      title:
        name: title
        description: 'Nullable Notification title.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      message:
        name: message
        description: 'Nullable Notification message.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_read:
        name: is_read
        description: 'Nullable Whether the notification has been read.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      notifiable_type:
        name: notifiable_type
        description: 'Nullable Class/type of the notifiable entity.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      notifiable_id:
        name: notifiable_id
        description: 'Nullable ID of the notifiable entity.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      type: architecto
      title: architecto
      message: architecto
      is_read: false
      notifiable_type: architecto
      notifiable_id: 16
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 5,
            "type": "update",
            "title": "Update Released",
            "message": "Version 2.0 has been released.",
            "is_read": true,
            "notifiable_type": "App\Models\User",
            "notifiable_id": 1,
            "created_at": "2025-09-19T09:18:00Z",
            "updated_at": "2025-09-19T10:00:00Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/notifications/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a notification.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the notification.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      notification:
        name: notification
        description: 'The ID of the notification.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 16
      notification: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/customers/{customer_id}/deposit'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Deposit amount to customer's balance."
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      customer_id:
        name: customer_id
        description: 'The ID of the customer.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      customer:
        name: customer
        description: 'The ID of the customer.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      customer_id: 16
      customer: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      amount:
        name: amount
        description: 'Amount to deposit. Minimum 1.'
        required: true
        example: architecto
        type: numeric
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      amount: architecto
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Deposit successful",
            "customer": {
              "id": 1,
              "balance": 3000.00
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/bank-accounts
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of all bank accounts.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          [
            {
              "id": 1,
              "bank_name": "First Bank",
              "account_number": "1234567890",
              "account_name": "Business Account",
              "branch": "Main Branch",
              "account_type": "Savings",
              "balance": 15000.00,
              "description": "Primary business account",
              "created_at": "2025-09-17T12:00:00Z",
              "updated_at": "2025-09-17T12:00:00Z"
            }
          ]
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/bank-accounts
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a new bank account.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      bank_name:
        name: bank_name
        description: 'Name of the bank.'
        required: true
        example: 'First Bank'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      account_number:
        name: account_number
        description: 'Unique account number.'
        required: true
        example: '1234567890'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      account_name:
        name: account_name
        description: 'Account owner or designation.'
        required: true
        example: 'Business Account'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      branch:
        name: branch
        description: 'Nullable bank branch.'
        required: false
        example: 'Main Branch'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      account_type:
        name: account_type
        description: 'Nullable account type.'
        required: false
        example: Savings
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      balance:
        name: balance
        description: 'Nullable starting balance.'
        required: false
        example: '15000.00'
        type: numeric
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      description:
        name: description
        description: 'Nullable description or notes.'
        required: false
        example: 'Eius et animi quos velit et.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      bank_name: 'First Bank'
      account_number: '1234567890'
      account_name: 'Business Account'
      branch: 'Main Branch'
      account_type: Savings
      balance: '15000.00'
      description: 'Eius et animi quos velit et.'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "id": 1,
            "bank_name": "First Bank",
            "account_number": "1234567890",
            "account_name": "Business Account",
            "branch": "Main Branch",
            "account_type": "Savings",
            "balance": 15000.00,
            "description": "Primary business account",
            "created_at": "2025-09-17T12:00:00Z",
            "updated_at": "2025-09-17T12:00:00Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/bank-accounts/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show details of a specific bank account.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the bank account.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      bankAccount:
        name: bankAccount
        description: 'The ID of the bank account.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
      bankAccount: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "bank_name": "First Bank",
            "account_number": "1234567890",
            "account_name": "Business Account",
            "branch": "Main Branch",
            "account_type": "Savings",
            "balance": 15000.00,
            "description": "Primary business account",
            "created_at": "2025-09-17T12:00:00Z",
            "updated_at": "2025-09-17T12:00:00Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/bank-accounts/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update an existing bank account.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the bank account.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      bankAccount:
        name: bankAccount
        description: 'The ID of the bank account.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
      bankAccount: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      bank_name:
        name: bank_name
        description: 'Optional name of the bank.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      account_number:
        name: account_number
        description: 'Optional unique account number.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      account_name:
        name: account_name
        description: 'Optional account owner or designation.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      branch:
        name: branch
        description: 'Nullable bank branch.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      account_type:
        name: account_type
        description: 'Nullable account type.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      balance:
        name: balance
        description: 'Nullable current balance.'
        required: false
        example: architecto
        type: numeric
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      description:
        name: description
        description: 'Nullable description or notes.'
        required: false
        example: 'Eius et animi quos velit et.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      bank_name: architecto
      account_number: architecto
      account_name: architecto
      branch: architecto
      account_type: architecto
      balance: architecto
      description: 'Eius et animi quos velit et.'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "bank_name": "First Bank Updated",
            "account_number": "1234567890",
            "account_name": "Business Account Updated",
            "branch": "Main Branch",
            "account_type": "Checking",
            "balance": 12000.00,
            "description": "Updated description",
            "created_at": "2025-09-17T12:00:00Z",
            "updated_at": "2025-09-17T13:00:00Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/bank-accounts/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a bank account.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the bank account.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      bankAccount:
        name: bankAccount
        description: 'The ID of the bank account.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
      bankAccount: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
